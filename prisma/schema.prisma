// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id    String @id @unique //matches kinde user id
  email String @unique

  videos Video[]

  stripeCustomerId       String?   @unique @map(name: "stripe_customer_id")
  stripeSubscriptionId   String?   @unique @map(name: "stripe_subscription_id")
  stripePriceId          String?   @map(name: "stripe_price_id")
  stripeCurrentPeriodEnd DateTime? @map(name: "stripe_current_period_end")

  tokens    Int     @default(0)
  plan      String  @default("Free")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum UploadStatus {
  PENDING
  PROCESSING
  FAILED
  SUCCESS
}

model Video {
  id   String @id @default(cuid())
  name String

  prompt String @db.Text
  aspectRatio String

  status UploadStatus @default(PENDING)

  url String?
  key String?

  sourceType SourceType @default(TEXT)
  sourceImageUrl String? // URL of the source image for image-to-video
  //  endFrameImageUrl String?

  user   User   @relation(fields: [userId], references: [id])
  userId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}



enum SourceType {
  TEXT
  IMAGE
}
